#
# CSE183 Assignment 8 Backend
#

openapi: '3.0.3'

info:
  description: CSE183 Assignment 8 Backend
  version: 0.1.0
  title: CSE183 Assignment 8 Backend

servers:
  - url: http://localhost:3010/v0

paths:
  /dummy:
    get:
      description: Dummy Endpoint
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /login:
    get:
      description: Login Endpoint
      responses:
        200:
          description: Successful Login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
  /insertUser:
    post:
      description: Post new user to db
      requestBody:
        description: User to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/info'      
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/info'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /Listing:
    get:
      description: Gets All Listings
      responses:
        200:
          description: Successfully grabbed listings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllListings'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /display/{id}:
    get:
      description: Gets a specific listing for display
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
        description: Listing ID
      responses:
        200:
          description: Successfully grabbed target listing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /replies/{id}:
    get:
      description: Gets all replies from listing
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
        description: Listing ID for replies
      responses:
        200:
          description: Successfully grabbed target replies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'                                     
  /search:
    get:
      description: Gets Searched Listings
      parameters:
        - in: query
          name: search
          required: false
          schema:
            type: string
        - in: query
          name: category
          required: false
          schema:
            type: string
      responses:
        200:
          description: Successfully grabbed Searched and category listings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllListings'
        400:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 
  /searchSub:
    get:
      description: Gets Searched Listings
      parameters:
        - in: query
          name: search
          required: false
          schema:
            type: string
        - in: query
          name: subCategory
          required: false
          schema:
            type: string
      responses:
        200:
          description: Successfully grabbed Searched and subCategory listings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllListings'
        400:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 
  
            
  /category:
    get:
      description: Returns listings in given category
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllCategories'
        404:
          description: No listings found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /location:
    get:
      description: Gets Searched Listings
      parameters:
        - in: query
          name: search
          required: false
          schema:
            type: string
        - in: query
          name: subCategory
          required: false
          schema:
            type: string
        - in: query
          name: category
          required: false
          schema:
            type: string
        - in: query
          name: location
          required: false
          schema:
            type: string
      responses:
        200:
          description: Successfully location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllListings'
        400:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 

  /specificFilter:
    get:
      description: Filter within a category
      parameters:
        - in: query
          name: category
          required: true
          schema:
            type: string
        - in: query
          name: subCategory
          required: false
          schema:
            type: string
        - in: query
          name: minPrice
          required: false
          schema:
            type: integer
        - in: query
          name: maxPrice
          required: false
          schema:
            type: integer
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllListings'
        404:
          description: No listings found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

                   

components:
  schemas:
    Error:
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
      required:
        - code
        - message
    info:
      type: object
      properties:
        FirstName:
          type: string
        LastName:
          type: string
        Email:
          type: string
          format: email
        PhoneNum:
          type: string
        Password:
          type: string
        role:
          type: string
          
    reply:
      type: object
      properties:
        id:
          type: string
          format: uuid
        listingid:
          type: string
          format: uuid
        personid:
          type: string
          format: uuid
        reply:
          type: string       

    Person:
      properties:
        id:
          type: string
          format: uuid
        info:
          type: object
          properties:
            items: 
              $ref: '#/components/schemas/info'

    AllListings:
      type: array
      items:
        $ref: '#/components/schemas/Listing'

    Listing:
      properties:
        id:
          type: string
          format: uuid
        creationtime:
          type: string
          format: date-time
        content:
          type: object
          properties:
            items:
              $ref: '#/components/schemas/content'
        subcategories:
          type: array
          items:
            type: string
            
    content:
      type: object
      properties:
        image:
          type: string
        price:
          type: string
        title:
          type: string
        category:
          type: string
        location:
          type: string

    AllCategories:
      type: array
      items:
        $ref: '#/components/schemas/Category'

    Category:
      properties:
        name:
          type: string
        filters:
          type: object
        subcategories:
          type: array
          items:
            type: string

    DummyResponse:
      properties:
        message:
          type: string
      required:
        - message

  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes

security:
  - bearerAuth: []         # use the same name as above
