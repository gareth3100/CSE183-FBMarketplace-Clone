#
# CSE183 Assignment 8 Backend
#

openapi: '3.0.3'

info:
  description: CSE183 Assignment 8 Backend
  version: 0.1.0
  title: CSE183 Assignment 8 Backend

servers:
  - url: http://localhost:3010/v0

paths:
  /dummy:
    get:
      description: Dummy Endpoint
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /login:
    get:
      description: Login Endpoint
      responses:
        200:
          description: Successful Login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
  /insertUser:
    get:
      description: Returns Signup page
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /category:
    get:
      description: Returns listings in given category
      parameters:
        - in: query
          name: category
          schema:
            type: string
          required: false
          description: Filter name
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        404:
          description: No listings found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                   

components:
  schemas:
    Error:
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
      required:
        - code
        - message
    
    Person:
      properties:
        id:
          type: string
          format: uuid
        info:
          type: object
          properties:
            FirstName:
              type: string
            LastName:
              type: string
            Email:
              type: string
              format: email
            PhoneNum:
              type: string
            password: 
              type: string
            role: 
              type: string
    Category:
      properties:
        name:
          type: string
        filters:
          type: string
        subcategories:
          type: string

    DummyResponse:
      properties:
        message:
          type: string
      required:
        - message
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes

security:
  - bearerAuth: []         # use the same name as above